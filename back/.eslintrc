{
    "env": {
        "es2020": true,
        "node": true
    },
    "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:import/recommended",
        "plugin:import/typescript",
        "plugin:react/recommended",
        "plugin:react-hooks/recommended",
        "plugin:react/jsx-runtime",
        "plugin:prettier/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": 2020,
        "sourceType": "module"
    },
    "plugins": [
        "@typescript-eslint",
        "prettier",
        "import"
    ],
    "settings": {
        "import/resolver": {
            "typescript": {
                "proyect": "tsconfig.json"
            },
            "node": {
                "extensions": [
                    ".ts",
                    ".tsx"
                ]
            }
        },
        "import/extetions": [
            ".ts",
            ".tsx"
        ],
        "import/ignore": [
            "node_modules",
            ".yarn"
        ],
        "import/parsers": {
            "@typescript-eslint/parser": [
                ".ts",
                ".tsx"
            ]
        }
    },
    "rules": {
        "@typescript-eslint/no-shadow": [
            "error"
        ],
        "@typescript-eslint/explicit-function-return-type": [
            "error",
            {
                "allowExpressions": true
            }
        ],
        "@typescript-eslint/no-use-before-define": [
            "error"
        ],
        "import/extensions": [
            "error",
            {
                "ignorePackages": true,
                "js": "never",
                "jsx": "never",
                "ts": "never",
                "tsx": "never"
            }
        ],
        "import/prefer-default-export": "off",
        "indent": [
            "error",
            4,
            {
                "MemberExpression": 1,
                "ignoredNodes": [
                    "FunctionExpression > .params[decorators.length > 0]",
                    "FunctionExpression > .params > :matches(Decorator,:not(:first-child))",
                    "ClassBody.body > PropertyDefinition[decorators.length > 0] > .key"
                ]
            }
        ],
        "linebreak-style": [
            "error",
            "unix"
        ],
        "no-use-before-define": "off",
        "no-shadow": "off",
        "quotes": [
            "error",
            "single"
        ],
        "semi": [
            "error",
            "never"
        ]
    }
}
