# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
    # Label used to access the service container
      postgres:
      # Docker Hub image
        image: postgres
        # Provide password to postgress
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
      APP_SECRET: app-secret
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Run clean install
        run: npm ci
        working-directory: ./back
      # run the migration in the test database
      - name: Run migrations
        run: npx prisma migrate dev
        working-directory: ./back
      # - run: npm run test
  deploy:
    runs-on: ubuntu-latest
    # if: github.event_name == 'push' && github.ref == 'refs/heads/develop' # only develop
    # needs: test
    steps:
      - uses: actions/checkout@v2
      - name: Run clean install
        run: npm ci
        working-directory: ./back
      - name: Run stage migration
        run: npm run migrate:deploy
        working-directory: ./back
        env:
          DATABASE_URL: ${{secrets.DATABASE_URL}}
          FRONT_URL: ${{secrets.FRONT_URL}}
          JWT_SECRET: ${{secrets.JWT_SECRET}}
          PORT: ${{secrets.PORT}}
          REDIS_URL: ${{secrets.REDIS_URL}}
          SESSION_SECRET: ${{secrets.SESSION_SECRET}}
      - uses: akhileshns/heroku-deploy@v3.4.6
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
